service:
  name: ${file(../slscms-config.yml):service_name}

package:
  individually: true
  excludeDevDependencies: false

# Add the serverless-webpack plugin
plugins:
  - serverless-plugin-typescript
  - serverless-stack-output
  - serverless-s3-sync
custom:
  output:
    file: ./stack.yml
    handler: scripts/client.handler
    
  webpack:
    includeModules: true # enable auto-packing of external modules

  s3Sync:
    - bucketName: ${file(../slscms-config.yml):bucket_name}
      bucketPrefix: templates/
      localDir: front_end/config/
    - bucketName: ${file(../slscms-config.yml):bucket_name}
      bucketPrefix: dist/
      localDir: front_end/public/
      acl: public-read # optional
      followSymlinks: true # optional
    - bucketName: ${file(../slscms-config.yml):bucket_name}
      bucketPrefix: admin/
      localDir: admin/build/
      acl: public-read # optional
      followSymlinks: true # optional
      defaultContentType: text/html # optional
      params: # optional
        - index.html:
            ContentType: text/html
        - "*.css":
            ContentType: text/css 

provider:
  name: aws
  runtime: nodejs10.x

  stage: dev
  region: us-west-2

functions:
  resolvePageType:
    handler: functions/resolvePageType.resolvePageType
    role: readS3role
    environment:
      BUCKET: ${file(../slscms-config.yml):bucket_name}

    package:
      exclude:
        - node_modules/**
        - '!node_modules/aws-sdk/**'
        - '!node_modules/jmespath/**'

  resolveNestedFragments:
    handler: functions/resolveNestedFragments.handler
    role: updateDbRole
    environment:
      FRAGMENTS_TABLE: ${self:service}-fragments

    package:
      exclude:
        - node_modules/**
        - '!node_modules/aws-sdk/**'
        - '!node_modules/ramda/**'
        - '!node_modules/jmespath/**'

  backup:
    handler: functions/backup.handler
    role: backupRole
    environment:
      FRAGMENTS_TABLE: ${self:service}-fragments
      BUCKET: ${file(../slscms-config.yml):bucket_name}
      REGION: ${self:provider.region}

    package:
      exclude:
        - node_modules/**
        - '!node_modules/aws-sdk/**'
        - '!node_modules/archiver/**'
        - '!node_modules/jmespath/**'

  restoreFromBackup:
    handler: functions/restoreFromBackup.handler
    role: restoreFromBackupRole
    environment:
      FRAGMENTS_TABLE: ${self:service}-fragments
      BUCKET: ${file(../slscms-config.yml):bucket_name}
      REGION: ${self:provider.region}

    package:
      exclude:
        - node_modules/**
        - '!node_modules/aws-sdk/**'
        - '!node_modules/unzipper/**'
        - '!node_modules/JSONStream/**'
        - '!node_modules/jmespath/**'

  resize:
    handler: functions/resizeImages.resizeImages
    role: resizeRole
    timeout: 10
    memorySize: 2048

    environment:
      BUCKET: ${file(../slscms-config.yml):bucket_name}
      FRAGMENTS_TABLE: ${self:service}-fragments
      REGION: ${self:provider.region}
      GRAPHQL:
        Fn::GetAtt: ["graphQLApi", "GraphQLUrl"]

    package:
      exclude:
        - node_modules/**
        - '!node_modules/aws-sdk/**'
        - '!node_modules/uuid/**'
        - '!node_modules/gm/**'
        - '!node_modules/jmespath/**'

  render:
    handler: functions/renderPages.handler
    role: resizeRole

    environment:
      BUCKET: ${file(../slscms-config.yml):bucket_name}
      FRAGMENTS_TABLE: ${self:service}-fragments
      GRAPHQL:
        Fn::GetAtt: ["graphQLApi", "GraphQLUrl"]

    package:
      exclude:
        - node_modules/**
        - '!node_modules/aws-sdk/**'
        - '!node_modules/pug/**'
        - '!node_modules/ramda/**'
        - '!node_modules/aws-appsync/**'
        - '!node_modules/isomorphic-fetch/**'
        - '!node_modules/jmespath/**'


resources:
  - ${file(./resources/resources.yml)}
  - ${file(./resources/graphql-api/createResolvers.js)}
  - ${file(./resources/outputs.yml)}