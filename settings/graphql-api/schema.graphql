# Interfaces
interface Fragment {
	id: ID!
  name: String!
  lastModified: Int!
}

# Types
type Gallery implements Fragment {
	id: ID!
	name: String!
  lastModified: Int!
	images: [Image]
}

type Image implements Fragment {
	id: ID!
  name: String!
	lastModified: Int!
	gallery: String!
	paths: [ImagePath!]!
	filename: String!
}

type Text implements Fragment {
	id: ID!
  name: String!
	lastModified: Int!
	text: String!
	is_rich: Boolean
}

type ImagePath {
	path: String!
	type: String!
}

type Menu implements Fragment {
	id: ID!
	name: String!
	lastModified: Int!
	items: [MenuItem!]
}

type MenuItem {
	name: String!
	href: String
	items: [MenuItem]
}

type Page implements Fragment {
	id: ID!
	name: String!
	lastModified: Int!
	page_type: String!
	fragments: [ID]
}
type Andrew implements Fragment {
  id: ID!
  name: String!
  lastModified: Int!
  text: Text
  gallery: [Image]
}

type PageType {
	name: String!
	template: String!
	query: String!
	inputs: [PageTypeInput]
}

type PageTypeInput {
	name: String!
	type: String!
	title: String!
}


# Mutations
type Mutation {
  deleteFragment(id: ID!): ID!
  recoverFragment(id: ID!): ID!
	renderPages(id: [ID]): Boolean!
}

# Queries
type Query {
	getPageTypeList: [PageType]
}


# schema
schema {
	query: Query
	mutation: Mutation
}